name: CI (pytest full)

on:
  push:
  pull_request:
  workflow_dispatch:
#  schedule:
#    - cron: '0 3 * * *'  # nightly run (UTC)

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      PYTEST_ADDOPTS: "-q"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-xdist pytest-cov allure-pytest

      - name: Run tests (pytest + xdist)
        run: |
          mkdir -p reports junit allure-results
          pytest tests/ -n auto \
            --junitxml=junit/report.xml \
            --alluredir=allure-results \
            --cov=. \
            --cov-report=xml:reports/coverage.xml \
            --cov-report=term-missing

      - name: Upload JUnit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-${{ matrix.python-version }}
          path: junit/

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.python-version }}
          path: allure-results/

      - name: Upload Coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.python-version }}
          path: reports/coverage.xml